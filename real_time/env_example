
if [ "$1" == "local" ]; then
    export DUCKDB_DB_FILE="local_databases/rt_dev_local.db"
    export MINIO_EXPOSE_PORT="19000"
    export MINIO_ENDPOINT="localhost:${MINIO_EXPOSE_PORT}"
    export MINIO_ACCESS_KEY="minio_abcde_k1234567"
    export MINIO_SECRET_KEY="minio_abcde_k1234567_secret1234567890123"
elif [ "$1" == "cloud" ]; then
    export REDSHIFT_HOST="xxx.us-east-1.redshift-serverless.amazonaws.com"
    export REDSHIFT_DB_NAME="dev"
    export REDSHIFT_USER="xxx"
    export REDSHIFT_PASSWORD="xxx"
    export REDSHIFT_IAM_ROLE="arn:aws:iam::xxx:role/xxx"
    if [ "$2" == "temp" ]; then
        export AWS_ACCESS_KEY_ID="xxx"
        export AWS_SECRET_ACCESS_KEY="xxx"
        export AWS_SESSION_TOKEN="xxx"
    else
        # Define aws-dev profile in ~/.aws/config
        # Then you can use aws sso login instead of setting the above variables
        export AWS_PROFILE="aws-dev"
    fi
else
    echo "ERROR: Please provide either 'local' or 'cloud' as an argument"
    # Do not exit, `source .env` command would close the terminal
fi

export DBT_PROFILES_DIR="profile"
export GOODDATA_PROFILES="demo_cicd_dev"
export PATH_GENERATED_DATA="generated_data"
export PATH_IN_BUCKET="real_time"
export S3_BUCKET_NAME="gdc-jacek-test-redshift"
export DB_INPUT_SCHEMA="input_stage_real_time"
# Now separated from the rest of the blueprint, but we may merge them in the future
export DB_OUTPUT_SCHEMA="cicd_output_stage_real_time"
export S3_REGION="us-east-1"

# TODO
#export MOTHERDUCK_DB_NAME="gdp_dev"
