#!/bin/env bash

if [ -f "./.env.custom.dev" ]; then
  source ./.env.custom.dev
fi

# Shared
export ELT_ENVIRONMENT="cicd_dev"
export DBT_TARGET="snowflake"
export GOODDATA_UPPER_CASE="--gooddata-upper-case"
export GOODDATA_ENVIRONMENT_ID="development"

# Shared DB params
export SNOWFLAKE_ACCOUNT="gooddata"
export SNOWFLAKE_USER="cicd"
export SNOWFLAKE_WAREHOUSE="DEMO_WH"
export SNOWFLAKE_DBNAME="CICD_DEV"
export INPUT_SCHEMA_GITHUB="github_input_stage"
export INPUT_SCHEMA_FAA="faa_input_stage"
export INPUT_SCHEMA_EXCHANGERATEHOST="exchangeratehost_input_stage"
export OUTPUT_SCHEMA="cicd_output_stage"

# Meltano
export MELTANO_TARGET="target-snowflake"
export MELTANO_STATE_AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY"
export MELTANO_STATE_AWS_SECRET_ACCESS_KEY="$AWS_SECRET_KEY"
export MELTANO_STATE_AWS_BUCKET="gdc-quiver"
unset MELTANO_STATE_AWS_ENDPOINT
export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY"
export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_KEY"

# dbt
export DBT_PROFILE_DIR="profile"
# dbt cloud - test running a dbt cloud job
export DBT_JOB_ID=406899
export DBT_PROJECT_ID=279006
# For if testing dbt cloud from localhost
export DBT_USER="$SNOWFLAKE_USER"
export DBT_ALLOWED_DEGRADATION=20
export DBT_ENVIRONMENT_ID=229757

# dbt env var needed for dbt Cloud
for var in $(env | grep -E 'VERTICA_|SNOWFLAKE_|_SCHEMA' | grep -vE '^DBT_' | cut -d= -f1); do
    # Remove the "POSTGRES_" prefix and add "DBT_" prefix
    new_var="DBT_${var}"
    # Get the value of the original variable
    value="${!var}"
    # Set the new variable with the modified value
    export "$new_var=$value"
done

# GoodData
export GOODDATA_HOST="https://demo-cicd.cloud.gooddata.com"
